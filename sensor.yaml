##############################################################
## Sensor  ##
##############################################################

##########################################################
## Date/Time
##########################################################
- platform: time_date
  display_options:
    - 'time'
    - 'date'
    - 'date_time'
    - 'date_time_utc'
    - 'date_time_iso'
    - 'time_date'
    - 'time_utc'
    - 'beat'

##########################################################
## Templates
##########################################################

- platform: template
  sensors:
    weather_alert_title:
      value_template: '{% if states("sensor.nws_alerts") | float > 1 %}{{states.sensor.nws_alerts.attributes.title.split(" - ")[0]}}{% elif states("sensor.nws_alerts") | float >0%}{{states.sensor.nws_alerts.attributes.title}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Alert Title"

    normal_time:
      value_template: '{{ as_timestamp(states("sensor.date_time_iso")) | timestamp_custom("%I:%M %p") }}'

    holidays_calendar:
      friendly_name: "Upcoming Holiday"
      value_template: '{{ states.calendar.holidays_in_united_states.attributes.message }}'

    normal_date:
      value_template: '{{ as_timestamp(states("sensor.date_time_iso")) | timestamp_custom("%A, %B %-d") }}'

    dryer_time_remaining:
      value_template: '{{ relative_time(now() - timedelta( seconds = as_timestamp(states("sensor.dryer_dryer_completion_time")) - as_timestamp(now())))  }}'

    dryer_job_state:
      value_template: 'Dryer: {{ states.sensor.dryer_dryer_job_state.state }}'
      
    washer_time_remaining:
      value_template: '{{ relative_time(now() - timedelta( seconds = as_timestamp(states("sensor.washer_washer_completion_time")) - as_timestamp(now())))  }}'

    washer_job_state:
      value_template: 'Washer: {{ states.sensor.washer_washer_job_state.state }}'

    weather_alert_desc:
      value_template: '{% if states("sensor.nws_alerts") | float > 1 %}{{states.sensor.nws_alerts.attributes.display_desc.split("Description: ")[1].split(">")[0]|truncate(254,True)}}{% elif states("sensor.nws_alerts") | float >0%}{{states.sensor.nws_alerts.attributes.display_desc.split("Description: ")[1].split(">")[0]|truncate(254,True)}}{% else %}No Alert{%endif %}'
      friendly_name: "NWS Alert Description"

    dark_outside:
      value_template: >-
        {%- if (states.sun.sun.attributes.elevation | int < 7.5 ) -%}
              True
        {%- else -%}
              False
        {%- endif -%}

    guest_ssid_device_count:
      value_template: >-
        {{ states.device_tracker | selectattr('attributes.essid','defined') | selectattr('attributes.essid','eq','REDACTED') | list | count }}

    pool_contract_signed:
      value_template: '{{ ((as_timestamp(now())-(states.input_datetime.pool_contract_signed.attributes.timestamp)) | int /60/1440) | round(0) }}'
      unit_of_measurement: 'Days'
      # entity_id: input_datetime.pool_contract_signed,sensor.time

    media_center_remote:
      value_template: "{{ states.remote.media_center.attributes.current_activity }}"
      friendly_name: "Media Center"

    master_remote:
      value_template: "{{ states.remote.master.attributes.current_activity }}"
      friendly_name: "Master"

    allergy_index_today_rating:
      value_template: "{{ states.sensor.allergy_index_today.attributes.rating }}"
      friendly_name: "Rating:"
      icon_template: mdi:playlist-star

    allergy_index_today_allergen_name_1:
      value_template: "{{ states.sensor.allergy_index_today.attributes.allergen_name_1 }}"
      friendly_name: "Allergen 1:"
      icon_template: mdi:flower

    allergy_index_today_allergen_name_2:
      value_template: "{{ states.sensor.allergy_index_today.attributes.allergen_name_2 }}"
      friendly_name: "Allergen 2:"
      icon_template: mdi:flower

    allergy_index_today_allergen_name_3:
      value_template: "{{ states.sensor.allergy_index_today.attributes.allergen_name_3 }}"
      friendly_name: "Allergen 3:"
      icon_template: mdi:flower

    allergy_index_tomorrow_rating:
      value_template: "{{ states.sensor.allergy_index_tomorrow.attributes.rating }}"
      friendly_name: "Rating:"
      icon_template: mdi:playlist-star

    allergy_index_tomorrow_allergen_name_1:
      value_template: "{{ states.sensor.allergy_index_tomorrow.attributes.allergen_name_1 }}"
      friendly_name: "Allergen 1:"
      icon_template: mdi:flower

    allergy_index_tomorrow_allergen_name_2:
      value_template: "{{ states.sensor.allergy_index_tomorrow.attributes.allergen_name_2 }}"
      friendly_name: "Allergen 2:"
      icon_template: mdi:flower

    allergy_index_tomorrow_allergen_name_3:
      value_template: "{{ states.sensor.allergy_index_tomorrow.attributes.allergen_name_3 }}"
      friendly_name: "Allergen 3:"
      icon_template: mdi:flower

    esxi_vmhost_esxi1_cpu_pct:
      value_template: >
        {% set usage = states.sensor.esxi_vmhost_REDACTED.attributes.cpuusage_ghz | default(0)  %}
        {% set total = states.sensor.esxi_vmhost_REDACTED.attributes.cputotal_ghz | default(0) %}
        {{ (( usage / total ) * 100 ) | round(2) }}
      friendly_name: "ESXi1 CPU %"
      unit_of_measurement: "%"

    esxi_vmhost_esxi1_mem_pct:
      value_template: >
        {% set usage = states.sensor.esxi_vmhost_REDACTED.attributes.memusage_gb | default(0) | int %}
        {% set total = states.sensor.esxi_vmhost_REDACTED.attributes.memtotal_gb | default(0) | int %}
        {{ (( usage / total ) * 100 ) | round(2) }}
      friendly_name: "ESXi1 MEM %"
      unit_of_measurement: "%"

    esxi_vm_vcenter_cpu_pct:
      value_template: >
        {% set usage = states.sensor.esxi_vm_vcenter.attributes.cpu_use_pct | default(0) %}
        {{ usage | round(2) }}
      friendly_name: "vCenter CPU %"
      unit_of_measurement: "%"

    esxi_vm_vcenter_mem_pct:
      value_template: >
        {% set usage = states.sensor.esxi_vm_vcenter.attributes.memory_used_mb | default(0) | int %}
        {% set total = states.sensor.esxi_vm_vcenter.attributes.memory_allocated_mb | default(0) | int %}
        {{ (( usage / total ) * 100 ) | round(2) }}
      friendly_name: "vCenter MEM %"
      unit_of_measurement: "%"

    esxi_vm_vcenter_uptime_hours:
      value_template: >
        {% set uptime = states.sensor.esxi_vm_vcenter.attributes.uptime_hours | default(0) %}
        {{ uptime }}
      friendly_name: "vCenter Uptime"
      unit_of_measurement: "Hours"

    esxi_vm_vcenter_used_space_gb:
      value_template: >
        {% set storage = states.sensor.esxi_vm_vcenter.attributes.used_space_gb | default(0) %}
        {{ storage }}
      friendly_name: "vCenter Storage"
      unit_of_measurement: "GiB"

    esxi_vm_vcenter_snapshots:
      value_template: >
        {% set snapshots = states.sensor.esxi_vm_vcenter.attributes.snapshots | default(0) %}
        {{ snapshots }}
      friendly_name: "vCenter Snapshots"

    sun_elevation:
      value_template: "{{ states.sun.sun.attributes.elevation }}"

    userone_phone_battery:
      value_template: "{% if states.device_tracker.userone_REDACTED.state %}{{ states.device_tracker.userone_REDACTED.attributes.battery_level | default(0) | int }}{% endif %}"
      friendly_name: "userone Pixel"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.device_tracker.userone_REDACTED.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    usertwo_phone_battery:
      value_template: "{% if states.device_tracker.REDACTED_REDACTED.state %}{{ states.device_tracker.REDACTED_REDACTED.attributes.battery_level | default(0) | int }}{% endif %}"
      friendly_name: "usertwo iPhone"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.device_tracker.REDACTED_REDACTED.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    userthree_phone_battery:
      value_template: "{% if states.device_tracker.userthree_REDACTED.state %}{{ states.device_tracker.userthree_REDACTED.attributes.battery_level | default(0) | int }}{% endif %}"
      friendly_name: "userthree iPhone"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.device_tracker.userthree_REDACTED.attributes.battery_level | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    userthree_temp_battery:
      value_template: "{% if states.sensor.lumi_lumi_weather_battery_3.state %}{{ states.sensor.lumi_lumi_weather_battery_3.state | default(0) | int }}{% endif %}"
      friendly_name: "userthree Temp."
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_weather_battery_3.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    userfour_temp_battery:
      value_template: "{% if states.sensor.lumi_lumi_weather_battery.state %}{{ states.sensor.lumi_lumi_weather_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "userfour Temp."
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_weather_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    master_temp_battery:
      value_template: "{% if states.sensor.lumi_lumi_weather_battery_4.state %}{{ states.sensor.lumi_lumi_weather_battery_4.state | default(0) | int }}{% endif %}"
      friendly_name: "Master Temp."
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_weather_battery_4.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    loft_temp_battery:
      value_template: "{% if states.sensor.lumi_lumi_weather_battery_2.state %}{{ states.sensor.lumi_lumi_weather_battery_2.state | default(0) | int }}{% endif %}"
      friendly_name: "Loft Temp."
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_weather_battery_2.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    office_temp_battery:
      value_template: "{% if states.sensor.lumi_lumi_weather_battery_5.state %}{{ states.sensor.lumi_lumi_weather_battery_5.state | default(0) | int }}{% endif %}"
      friendly_name: "Office Temp."
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_weather_battery_5.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    office_motion_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_motion_aq2_battery.state %}{{ states.sensor.lumi_lumi_sensor_motion_aq2_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "Office Motion"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_motion_aq2_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    living_motion_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_motion_aq2_battery_2.state %}{{ states.sensor.lumi_lumi_sensor_motion_aq2_battery_2.state | default(0) | int }}{% endif %}"
      friendly_name: "Living Motion"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_motion_aq2_battery_2.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    master_switch_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_switch_aq2_battery.state %}{{ states.sensor.lumi_lumi_sensor_switch_aq2_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "Master Switch"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_switch_aq2_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    master_switch_usertwo_battery:
      value_template: "{% if states.sensor.lumi_lumi_remote_b1acn01_battery.state %}{{ states.sensor.lumi_lumi_remote_b1acn01_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "Master Switch2"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_remote_b1acn01_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    chalkboard_switch_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_switch_aq2_battery_2.state %}{{ states.sensor.lumi_lumi_sensor_switch_aq2_battery_2.state | default(0) | int }}{% endif %}"
      friendly_name: "Chalkboard Switch"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_switch_aq2_battery_2.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    kids_leak_sensor_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_wleak_aq1_battery.state %}{{ states.sensor.lumi_lumi_sensor_wleak_aq1_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "Kids Leak Sensor"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_wleak_aq1_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    master_leak_sensor_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_wleak_aq1_battery_2.state %}{{ states.sensor.lumi_lumi_sensor_wleak_aq1_battery_2.state | default(0) | int }}{% endif %}"
      friendly_name: "Master Leak Sensor"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_wleak_aq1_battery_2.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    laundry_leak_sensor_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_wleak_aq1_battery_3.state %}{{ states.sensor.lumi_lumi_sensor_wleak_aq1_battery_3.state | default(0) | int }}{% endif %}"
      friendly_name: "Laundry Leak Sensor"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_wleak_aq1_battery_3.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    guest_leak_sensor_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_wleak_aq1_battery_4.state %}{{ states.sensor.lumi_lumi_sensor_wleak_aq1_battery_4.state | default(0) | int }}{% endif %}"
      friendly_name: "Guest Leak Sensor"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_wleak_aq1_battery_4.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    patio_door_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_magnet_aq2_battery.state %}{{ states.sensor.lumi_lumi_sensor_magnet_aq2_battery.state | default(0) | int }}{% endif %}"
      friendly_name: "Patio Door"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_magnet_aq2_battery.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    shop_garage_door_battery:
      value_template: "{% if states.sensor.lumi_lumi_sensor_magnet_aq2_battery_2.state %}{{ states.sensor.lumi_lumi_sensor_magnet_aq2_battery_2.state | default(0) | int }}{% endif %}"
      friendly_name: "Shop Garage Door"
      unit_of_measurement: "%"
      icon_template: >
        {% set battery_level = states.sensor.lumi_lumi_sensor_magnet_aq2_battery_2.state | default(0) | int %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 %}
          mdi:battery
        {% elif battery_round > 0 %}
          mdi:battery-{{ battery_round }}
        {% else %}
          mdi:battery-alert
        {% endif %}

    patio_door:
      value_template: '{% if is_state("binary_sensor.lumi_lumi_sensor_magnet_aq2_opening", "on") %}Open{% elif is_state("binary_sensor.lumi_lumi_sensor_magnet_aq2_opening", "off") %}Closed{% else %}unknown{% endif %}'
      friendly_name: "Patio Door Status"
      icon_template: >
        {% set patio_door_state = states.binary_sensor.lumi_lumi_sensor_magnet_aq2_opening.state %}
        {% if patio_door_state == 'on' %}
          mdi:door-open
        {% elif patio_door_state == 'off' %}
          mdi:door-closed
        {% else %}
          mdi:alert-outline
        {% endif %}

    shop_door:
      value_template: '{% if is_state("binary_sensor.lumi_lumi_sensor_magnet_aq2_opening_2", "on") %}Open{% elif is_state("binary_sensor.lumi_lumi_sensor_magnet_aq2_opening_2", "off") %}Closed{% else %}unknown{% endif %}'
      friendly_name: "Shop Door Status"
      icon_template: >
        {% set patio_door_state = states.binary_sensor.lumi_lumi_sensor_magnet_aq2_opening_2.state %}
        {% if patio_door_state == 'on' %}
          mdi:door-open
        {% elif patio_door_state == 'off' %}
          mdi:door-closed
        {% else %}
          mdi:alert-outline
        {% endif %}

    garage_door:
      value_template: >
        {% if is_state("cover.garage_door", "open") %}
          Open
        {% elif is_state("cover.garage_door", "opening") %}
          Opening
        {% elif is_state("cover.garage_door", "closing") %}
          Closing
        {% elif is_state("cover.garage_door", "closed") %}
          Closed
        {% else %}unknown{% endif %}
      friendly_name: "Garage Door Status"
      icon_template: >
        {% set patio_door_state = states.cover.garage_door.state %}
        {% if patio_door_state == 'open' %}
          mdi:garage-open-variant
        {% elif patio_door_state == 'opening' %}
          mdi:garage-alert-variant
        {% elif patio_door_state == 'closing' %}
          mdi:garage-alert-variant
        {% elif patio_door_state == 'closed' %}
          mdi:garage-variant
        {% else %}
          mdi:alert-outline
        {% endif %}

    last_run_sprinkler:
      friendly_name: "Last Run"
      value_template: '{{as_timestamp(states.input_datetime.last_run_sprinkler.state) | timestamp_custom("%A, %d %h %I:%M %p")}}'

    qnapups_battery_runtime_min:
      friendly_name: "Battery Runtime"
      unit_of_measurement: "min"
      value_template: >
        {% set time = states.sensor.qnapups_battery_runtime.state %}
        {% set minutes = ((time | int /  60) | string).split('.')[0] %}
        {{minutes}} min

    ha_uptime:
      friendly_name: "Home Assistant uptime"
      value_template: >-
        {% set up_time =  as_timestamp(now()) - as_timestamp(states('sensor.uptime')) %}
        {% set days = (up_time / 86400) | round(2) %}
        {{ days }}

##########################################################
## NAS
##########################################################

- platform: qnap
  host: !secret nas2_host
  username: !secret nas_username
  password: !secret nas_pass
  nics: eth0
  monitored_conditions:
    - status
    - system_temp
    - cpu_usage
    - cpu_temp
    - memory_percent_used
    - network_tx
    - network_rx
    - volume_size_free
    - volume_size_used
    - volume_percentage_used
    - drive_smart_status
    
##########################################################
## National Weather Service Alerts
##########################################################

- platform: nws_alerts
  zone_id: 'AZC013'

##########################################################
## History stats
##########################################################

- platform: history_stats
  name: userone time home
  entity_id: device_tracker.userone_REDACTED
  state: 'home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userone time lifetime
  entity_id: device_tracker.userone_REDACTED
  state: 'Lifetime'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userone time school
  entity_id: device_tracker.userone_REDACTED
  state: 'REDACTED'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userone time not_home
  entity_id: device_tracker.userone_REDACTED
  state: 'not_home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userone time work
  entity_id: device_tracker.userone_REDACTED
  state: 'Work'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time home
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time lifetime
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'Lifetime'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time school
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'REDACTED'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time not_home
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'not_home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time work
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'Work'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: usertwo time REDACTED
  entity_id: device_tracker.REDACTED_REDACTED
  state: 'REDACTED'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userthree time home
  entity_id: device_tracker.userthree_REDACTED
  state: 'home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userthree time lifetime
  entity_id: device_tracker.userthree_REDACTED
  state: 'Lifetime'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userthree time school
  entity_id: device_tracker.userthree_REDACTED
  state: 'REDACTED'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'

- platform: history_stats
  name: userthree time not_home
  entity_id: device_tracker.userthree_REDACTED
  state: 'not_home'
  type: time
  start: '{{ as_timestamp( now().replace(hour=0).replace(minute=0).replace(second=0) ) - now().weekday() * 86400 }}'
  end: '{{ now() }}'
