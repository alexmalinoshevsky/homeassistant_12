##############################################################
## Sensor  ##
##############################################################

 ##########################################################
 ## Season
 ##########################################################

  - platform: season

 ##########################################################
 ## HA Instance
 ##########################################################

  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: Current HA Release
    scan_interval: 3600

  - platform: version

  - platform: sql
    db_url: mysql://REDACTED:REDACTED@REDACTED/hass_docker_db
    queries:
      - name: HA DB Size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024 / 1024, 3) "value" FROM information_schema.tables WHERE table_schema="hass_docker_db" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: GB

  - platform: uptime

  - platform: filesize
    file_paths:
      - /config/home-assistant.log

 ##########################################################
 ## Templates
 ##########################################################

  - platform: template
    sensors:
      octoprint_time_remaining_friendly:
        value_template: >
              {% set etime = states.sensor.octoprint_time_remaining.state | int %}
              {% set seconds = etime % 60 %}
              {% set minutes = ((etime % 3600) / 60) | int %}
              {% set hours = ((etime % 86400) / 3600) | int %}
              {% set days = (etime / 86400) | int %}
              {%- if days -%}
                {{days}} day{{'s, ' if days > 1 else ', '}}
              {%- endif -%}
              {%- if hours -%}
                {{hours}} hour{{'s, ' if hours > 1 else ', '}}
              {%- endif -%}
              {{minutes}} minute{{'s' if minutes > 1 else ''}}
        friendly_name: 'Print Time Left'

      octoprint_time_elapsed_friendly:
        value_template: >
              {% set etime = states.sensor.octoprint_time_elapsed.state | int %}
              {% set seconds = etime % 60 %}
              {% set minutes = ((etime % 3600) / 60) | int %}
              {% set hours = ((etime % 86400) / 3600) | int %}
              {% set days = (etime / 86400) | int %}
              {%- if days -%}
                {{days}} day{{'s, ' if days > 1 else ', '}}
              {%- endif -%}
              {%- if hours -%}
                {{hours}} hour{{'s, ' if hours > 1 else ', '}}
              {%- endif -%}
              {{minutes}} minute{{'s' if minutes > 1 else ''}}
        friendly_name: 'Print Time'

      media_center_remote:
        value_template: '{{ states.remote.media_center.attributes.current_activity }}'
        friendly_name: 'Media Center'

      master_remote:
        value_template: '{{ states.remote.master.attributes.current_activity }}'
        friendly_name: 'Master'

      sun_elevation:
        value_template: '{{ states.sun.sun.attributes.elevation }}'

      userone_phone_battery:
        value_template: '{{ states.device_tracker.life360_userone_REDACTED.attributes.battery | default(0) | int }}'
        friendly_name: 'userone Essential PH-1'
        unit_of_measurement: "%"
        icon_template: >
            {% set battery_level = states.device_tracker.life360_userone_REDACTED.attributes.battery | default(0) | int %}
            {% set battery_round = (battery_level / 10) | int * 10 %}
            {% if battery_round >= 100 %}
              mdi:battery
            {% elif battery_round > 0 %}
              mdi:battery-{{ battery_round }}
            {% else %}
              mdi:battery-alert
            {% endif %}

      usertwo_phone_battery:
        value_template: '{{ states.device_tracker.life360_REDACTED_REDACTED.attributes.battery | default(0) | int }}'
        friendly_name: 'usertwo iPhone X'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.device_tracker.life360_REDACTED_REDACTED.attributes.battery | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      userthree_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001b9561c.attributes.battery_level | default(0) | int }}'
        friendly_name: 'userthree Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001b9561c.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      userfour_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001f50d5f.attributes.battery_level | default(0) | int }}'
        friendly_name: 'userfour Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001f50d5f.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      master_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001fa9e02.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Master Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001fa9e02.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      loft_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001f51e9e.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Loft Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001f51e9e.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      office_temp_battery:
        value_template: '{{ states.sensor.temperature_158d0001f50dcb.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Office Temp.'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.sensor.temperature_158d0001f50dcb.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      master_switch_battery:
        value_template: '{{ states.binary_sensor.switch_158d0001b86a74.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Master Switch'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.binary_sensor.switch_158d0001b86a74.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      chalkboard_switch_battery:
        value_template: '{{ states.binary_sensor.switch_158d0001b76826.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Chalkboard Switch'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.binary_sensor.switch_158d0001b76826.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      patio_door_battery:
        value_template: '{{ states.binary_sensor.door_window_sensor_158d0001d85176.attributes.battery_level | default(0) | int }}'
        friendly_name: 'Patio Door'
        unit_of_measurement: "%"
        icon_template: >
          {% set battery_level = states.binary_sensor.door_window_sensor_158d0001d85176.attributes.battery_level | default(0) | int %}
          {% set battery_round = (battery_level / 10) | int * 10 %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}

      patio_door:
        value_template: '{% if is_state("binary_sensor.door_window_sensor_158d0001d85176", "on") %}Open{% elif is_state("binary_sensor.door_window_sensor_158d0001d85176", "off") %}Closed{% else %}unknown{% endif %}'
        friendly_name: 'Patio Door Status'
        icon_template: >
          {% set patio_door_state = states.binary_sensor.door_window_sensor_158d0001d85176.state %}
          {% if patio_door_state == 'on' %}
            mdi:door-open
          {% elif patio_door_state == 'off' %}
            mdi:door-closed
          {% else %}
            mdi:alert-outline
          {% endif %}

        ##########################################################
        ## Deluge
        ##########################################################

  - platform: deluge
    host: !secret deluge_host
    username: !secret deluge_user
    password: !secret deluge_pass
    monitored_variables:
      - 'current_status'
      - 'download_speed'
      - 'upload_speed'

        ##########################################################
        ## NAS
        ##########################################################

  - platform: qnap
    host: !secret nas2_host
    username: !secret nas_username
    password: !secret nas_pass
    nics: eth0
    monitored_conditions:
      - status
      - system_temp
      - cpu_usage
      - cpu_temp
      - memory_percent_used
      - network_tx
      - network_rx
      - volume_size_free
      - volume_size_used
      - volume_percentage_used
      - drive_smart_status

        ##########################################################
        ## Cox Usage
        ##########################################################

  - platform: command_line
    command: cal $(date +"%m %Y") | awk 'NF {DAYS = $NF}; END {print DAYS}'
    name: Days In Current Month
    scan_interval: 3600

  - platform: file
    name: Cox Utilization
    file_path: /shared/coxusage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumUsage | int == 0 and value_json.dumLimit | int == 0 and value_json.dumUtilization | int == 0 %}
          stats unavailable
        {% else %}
          {{ value_json.dumUsage | int }} / {{ value_json.dumLimit | int }} GB ({{ value_json.dumUtilization | int }} %)
        {% endif %}
      {% else %}
        undefined
      {% endif %}

  - platform: file
    name: Cox Time Left
    file_path: /shared/coxusage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumDaysLeft is defined %}
          {{ value_json.dumDaysLeft | int }} Days
        {% else %}
          unknown
        {% endif %}
      {% else %}
        undefined
      {% endif %}

  - platform: file
    name: Cox Avg GB Current
    file_path: /shared/coxusage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumUsage | int == 0 and value_json.dumDaysLeft | int == 0 %}
          stats unavailable
        {% elif states.sensor.days_in_current_month.state is defined %}
          {{ (float(value_json.dumUsage) / (float(states.sensor.days_in_current_month.state) - float(value_json.dumDaysLeft))) | round(1) }} GB per day
        {% else %}
          month_undefined
        {% endif %}
      {% else %}
        undefined
      {% endif %}

  - platform: file
    name: Cox Avg GB Remaining
    file_path: /shared/coxusage.json
    value_template: >
      {% if value_json is defined %}
        {% if value_json.dumLimit | int == 0 and value_json.dumUsage | int == 0 and value_json.dumDaysLeft | int == 0 %}
          stats unavailable
        {% else %}
          {{ ((float(value_json.dumLimit) - float(value_json.dumUsage)) / float(value_json.dumDaysLeft)) | round(1) }} GB per day
        {% endif %}
      {% else %}
        undefined
      {% endif %}
