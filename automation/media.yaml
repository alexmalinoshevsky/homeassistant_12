#################################################################
## Media Player Automations
#################################################################

      #################################################################
      ## Remote Main Media Center
      #################################################################

- alias: media spam tv poweron
  trigger:
    - platform: state
      entity_id: remote.master
      from: 'off'
      to: 'on'
  action:
    - service: remote.send_command
      data_template:
        entity_id: remote.master
        command: 'PowerOn'
        device: 79346609
    - service: remote.send_command
      data_template:
        entity_id: remote.master
        command: 'PowerOn'
        device: 79346609
    - service: remote.send_command
      data_template:
        entity_id: remote.master
        command: 'PowerOn'
        device: 79346609
    - service: remote.send_command
      data_template:
        entity_id: remote.master
        command: 'PowerOn'
        device: 79346609
    - service: remote.send_command
      data_template:
        entity_id: remote.master
        command: 'PowerOn'
        device: 79346609

        ##########################################################
        ## Reset Sonos Every Morning
        ##########################################################

- alias: media reset sonos every morning
  trigger:
    - platform: time
      at: '04:00'
  action:
    - service: media_player.unjoin
      entity_id:
        - media_player.chalkboard_room
        - media_player.kitchen
        - media_player.loft
        - media_player.office
    - service: media_player.clear_playlist
      entity_id:
        - media_player.chalkboard_room
        - media_player.kitchen
        - media_player.loft
        - media_player.office
    - service: media_player.join
      data:
        group_members:
          - media_player.chalkboard_room
          - media_player.kitchen
          - media_player.loft
          - media_player.office
      target:
        entity_id: media_player.office

        ##########################################################
        ## Group All Sonos
        ##########################################################

- alias: media group all sonos
  trigger:
    - platform: state
      entity_id: input_boolean.group_all_sonos
      from: 'off'
      to: 'on'
  condition:
    - condition: state
      entity_id: group.household
      state: 'home'
  action:
    - service: media_player.join
      data:
        group_members:
          - media_player.chalkboard_room
          - media_player.kitchen
          - media_player.loft
          - media_player.office
      target:
        entity_id: media_player.office

##########################################################
## Turn off sonos if everyone is gone
##########################################################

- alias: turn off sonos if everyone is gone
  trigger:
    - platform: state
      entity_id: group.household
      to: 'not_home'
  action:
    - service: media_player.media_pause
      target:
        entity_id:
          - media_player.chalkboard_room
          - media_player.kitchen
          - media_player.loft
          - media_player.office

        ##########################################################
        ## Pause Deluge if Cox utilization > 95%
        ##########################################################

# - alias: media pause deluge if cox utilization above 95
#   trigger:
#     - platform: numeric_state
#       entity_id: sensor.cox_perc
#       value_template: '{{ states.sensor.cox_perc.state | int }}'
#       above: 95
#   condition:
#     - condition: state
#       entity_id: switch.deluge_switch
#       state: 'on'
#   action:
#     - service: switch.turn_off
#       entity_id: switch.deluge_switch
#     - service: notify.ntalekt
#       data:
#         title: "Home Assistant"
#         message: "Deluge Turned Off, Cox = {{ states.sensor.cox_perc.state | int }} %"

# - alias: media unpause deluge if cox utilization under 95
#   trigger:
#     - platform: numeric_state
#       entity_id: sensor.cox_perc
#       value_template: '{{ states.sensor.cox_perc.state | int }}'
#       below: 95
#   condition:
#     - condition: state
#       entity_id: switch.deluge_switch
#       state: 'off'
#   action:
#     - service: switch.turn_on
#       entity_id: switch.deluge_switch
#     - service: notify.ntalekt
#       data:
#         title: "Home Assistant"
#         message: "Deluge Turned On, Cox = {{ states.sensor.cox_perc.state | int }} %"
