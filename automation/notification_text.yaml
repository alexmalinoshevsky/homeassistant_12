#################################################################
## Text Notification Automations
#################################################################

##########################################################
## Pushbullet - Notification Test
##########################################################

- alias: notification text test pushbullet
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification_pushbullet
      from: "off"
      to: "on"
  action:
    - service: notify.pushbullet
      data:
        title: "Home Assistant"
        message: "This is a test."
    - service: homeassistant.turn_off
      entity_id:
        input_boolean.test_text_notification_pushbullet

##########################################################
## Slack - Notification Test
##########################################################

- alias: notification text test slack
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification_slack
      from: "off"
      to: "on"
  action:
    - service: notify.slack
      data:
        title: "Home Assistant"
        message: "This is a test."
    - service: homeassistant.turn_off
      entity_id:
        input_boolean.test_text_notification_slack
        
##########################################################
## Pushbullet - Life360 Overdue Update
##########################################################

#- alias: notification life360 overdue update
#  trigger:
#    - platform: event
#      event_type: life360_update_overdue
#  action:
#    - service: notify.slack
#      data:
#        title: "Home Assistant"
#        message: >
#          Update for {{
#            state_attr(trigger.event.data.entity_id, 'friendly_name') or
#            trigger.event.data.entity_id
#          }} is overdue.
#
#- alias: notification life360 update restored
#  trigger:
#    platform: event
#    event_type: life360_update_restored
#  action:
#    - service: notify.slack
#      data:
#        title: "Home Assistant"
#        message: >
#          Update for {{
#            state_attr(trigger.event.data.entity_id, 'friendly_name') or
#            trigger.event.data.entity_id
#          }} restored after {{ trigger.event.data.wait }}.

##########################################################
## slack - Low Battery Alert
##########################################################

- alias: notification text low battery alert
  initial_state: 'on'
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '18:00:00'
  condition:
    condition: template
    value_template: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() |trim != "" }}
  action:
    - service: notify.slack
      data_template:
        title: "Home Assistant"
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
    - service: persistent_notification.create
      data_template:
        title: Low Battery
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
        notification_id: low-battery-alert

##########################################################
## Failed Login
##########################################################

- alias: notification failed login
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'unknown' }}"
  action:
    - service: notify.slack
      data:
        title: "Home Assistant"
        message: "Failed Home Assistant login!"

##########################################################
## New version of Home Assistant
##########################################################

- alias: notification new version of home assistant
  trigger:
    - platform: state
      entity_id: sensor.current_ha_release
  action:
    - service: notify.slack
      data:
        title: "New Home Assistant Release"
        message: "Home Assistant {{ states.sensor.current_ha_release.state }} is now available."

##########################################################
## Garage Door - Left it open
##########################################################

- alias: notification garage door left it open
  trigger:
    - platform: state
      entity_id: group.household
      to: 'not_home'
  condition:
    - condition: state
      entity_id: binary_sensor.ecolink_garage_door_tilt_sensor_sensor
      state: 'on'
  action:
    - service: notify.slack
      data:
        title: "Home Assistant"
        message: "Come back, the garage door is open!"

##########################################################
## Garage Door - Open for 30 minutes
##########################################################

- alias: notification garage open for 30min
  trigger:
    - platform: state
      entity_id: binary_sensor.ecolink_garage_door_tilt_sensor_sensor
      to: 'on'
      for:
        minutes: 30
  condition:
    - condition: state
      entity_id: group.household
      state: 'home'
    - condition: state
      entity_id: binary_sensor.garage_occupancy_on
      state: 'off'
  action:
    - service: notify.slack
      data:
        title: "Home Assistant"
        message: "The garage door has been open for 30 minutes."

##########################################################
## Notify if critical device goes offline
##########################################################

- alias: notification alert when a critical device goes offline
  trigger:
#    - platform: state
#      entity_id: binary_sensor.synology_nas
#      to: 'off'
#      for:
#        minutes: 10
    - platform: state
      entity_id: binary_sensor.usg_gw
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.sw8_60w
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ap_loft
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ap_living
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.pihole
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.nas2
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.garage_cam
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.living_cam
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.chalkboard_cam
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.shop_cam
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.harmony_living
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.harmony_master
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: binary_sensor.ring_pro
      to: 'off'
      for:
        minutes: 10
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: >
          {% if states.automation.notification_alert_when_a_critical_device_goes_offline.last_triggered is not none %}
            {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.notification_alert_when_a_critical_device_goes_offline.attributes.last_triggered) | int > 3600 %} true {% else %} false
            {% endif %}
          {% else %}
          false
          {% endif %}
  action:
    - service: notify.slack
      data_template:
        title: "Home Assistant"
        message: '{{trigger.to_state.attributes.friendly_name}} has gone offline.'
