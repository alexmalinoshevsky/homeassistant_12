#################################################################
## Text Notification Automations
#################################################################

##########################################################
## Slack - Notification Test
##########################################################

- alias: notification text test slack
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification_slack
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.ntalekt
      data:
        title: "Home Assistant"
        message: "This is a test."
    - service: homeassistant.turn_off
      entity_id:
        input_boolean.test_text_notification_slack

##########################################################
## HA Persistant Notification - Notification Test
##########################################################

- alias: notification text persistant ha 
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification_ha
      from: "off"
      to: "on"
  action:
    - service: persistent_notification.create
      data:
        title: "Home Assistant"
        message: "This is a test."
    - service: homeassistant.turn_off
      entity_id:
        input_boolean.test_text_notification_ha

##########################################################
## Discord - Notification Test
##########################################################

- alias: notification text test discord
  trigger:
    - platform: state
      entity_id: input_boolean.test_text_notification_discord
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "This is a test."
        target: ["REDACTED"]
    - service: homeassistant.turn_off
      entity_id:
        input_boolean.test_text_notification_discord

##########################################################
## Water leak - kids
##########################################################

- alias: notification text water leak kids
  trigger:
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_wleak_aq1_iaszone
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Leak detected in the kids bathroom."
        target: ["REDACTED"]

##########################################################
## Water leak - main
##########################################################

- alias: notification text water leak main
  trigger:
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_wleak_aq1_iaszone_2
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Leak detected in the main bathroom."
        target: ["REDACTED"]

##########################################################
## Water leak - laundry
##########################################################

- alias: notification text water leak laundry
  trigger:
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_wleak_aq1_iaszone_3
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Leak detected in the laundry room."
        target: ["REDACTED"]

##########################################################
## Water leak - guest
##########################################################

- alias: notification text water leak guest
  trigger:
    - platform: state
      entity_id: binary_sensor.lumi_lumi_sensor_wleak_aq1_iaszone_4
      from: "off"
      to: "on"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Leak detected in the guest bathroom."
        target: ["REDACTED"]
        
##########################################################
## slack - Low Battery Alert
##########################################################

#this doesn't work any more
- alias: notification text low battery alert
  initial_state: 'on'
  trigger:
    - platform: time
      at: '10:00:00'
    - platform: time
      at: '18:00:00'
  condition:
    condition: template
    value_template: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() |trim != "" }}
  action:
    - service: notify.ntalekt
      data_template:
        title: "Home Assistant"
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
    - service: persistent_notification.create
      data_template:
        title: Low Battery
        message: >
          {% macro battery_level() %}
          {%- set threshold = 10 -%}
          {% set domains = ['sensor'] %}
          {% for domain in domains -%}
          {% for item in states[domain] if (("battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown"))) -%}
          {% if "battery" in item.entity_id | lower and ((item.state | int < threshold and item.state|int != 0) or item.state | lower == "low" or item.state | lower == "unknown") -%}
          {{ item.name }} ({{ item.state }}%){% if not loop.last %}, {%- endif %} {% endif -%}
          {% endfor %}
          {%- endfor %}
          {% endmacro %}
          {{ battery_level() }}
        notification_id: low-battery-alert

##########################################################
## Failed Login
##########################################################

- alias: notification failed login
  trigger:
    platform: template
    value_template: "{{ states('persistent_notification.httplogin') != 'unknown' }}"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Failed Home Assistant login!"
        target: ["REDACTED"]

##########################################################
## New version of Home Assistant
##########################################################

- alias: notification new version of home assistant
  trigger:
    - platform: state
      entity_id: sensor.current_ha_release
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Home Assistant {{ states.sensor.current_ha_release.state }} is now available."
        target: ["REDACTED"]

##########################################################
## New version of Tasmota
##########################################################

- alias: notification new version of tasmota
  trigger:
    - platform: state
      entity_id: sensor.tasmota_latest_version
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Tasmota {{ states.sensor.tasmota_latest_version.state }} is now available."
        target: ["REDACTED"]

##########################################################
## Garage Door - Left it open
##########################################################

- alias: notification garage door left it open
  trigger:
    - platform: state
      entity_id: group.household
      to: "away"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - condition: state
        entity_id: cover.ratgdov25i_885dfb_door
        state: 'open'
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Come back, the garage door is open!"
        target: ["REDACTED"]

##########################################################
## Garage Door - Open for 30 minutes
##########################################################

- alias: notification garage open for 30min
  trigger:
    - platform: state
      entity_id: cover.ratgdov25i_885dfb_door
      to: 'open'
      for:
        minutes: 30
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - condition: state
        entity_id: group.household
        state: "home"
      - condition: state
        entity_id: binary_sensor.garage_occupancy_on
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "The garage door has been open for 30 minutes."
        target: ["REDACTED"]

##########################################################
## Garage Door - Opened/Closed
##########################################################

- alias: notification garage opened
  trigger:
    - platform: state
      entity_id: cover.ratgdov25i_885dfb_door
      from: 'opening'
      to: 'open'
    - platform: state
      entity_id: cover.ratgdov25i_885dfb_door
      from: 'closed'
      to: 'open'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "The garage door has been opened."
        target: ["REDACTED"]

- alias: notification garage closed
  trigger:
    - platform: state
      entity_id: cover.ratgdov25i_885dfb_door
      from: 'closing'
      to: 'closed'
    - platform: state
      entity_id: cover.ratgdov25i_885dfb_door
      from: 'open'
      to: 'closed'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "The garage door has been closed."
        target: ["REDACTED"]

##########################################################
## Pool heater turned on
##########################################################

- alias: pool heater turned on
  trigger:
    - platform: state
      entity_id: water_heater.pool
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Pool heater is running!!"
        target: ["REDACTED"]

- alias: pool heater setting changed
  trigger:
    - platform: state
      entity_id: sensor.pool_heater_mode
      to: 'Gas Heater'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
  action:
    - service: notify.homeassistant_dis
      data:
        message: "Pool heater mode changed!!"
        target: ["REDACTED"]

##########################################################
## Frigate alerts
##########################################################

    ##########################################################
    ## Frigate car detected in the driveway
    ##########################################################

- alias: notification alert frigate car entered the driveway
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'car' }}"
      - "{{ 'driveway' in trigger.payload_json['after']['entered_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} has been detected in the driveway.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Car entered driveway from street
    ##########################################################

- alias: notification alert frigate car arrived in driveway
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'car' }}"
      - "{{ 'street' in trigger.payload_json['before']['current_zones'] }}"
      - "{{ 'driveway' in trigger.payload_json['after']['current_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} has arrived in the driveway.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate car left the driveway
    ##########################################################

- alias: notification alert frigate car left the driveway
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'car' }}"
      - "{{ 'driveway' in trigger.payload_json['before']['current_zones'] }}"
      - "{{ 'street' in trigger.payload_json['after']['current_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} has left the driveway.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate person in the front yard
    ##########################################################

- alias: notification alert frigate person in front yard
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ 'yard' in trigger.payload_json['after']['entered_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the front yard.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate person detected
    ##########################################################

- alias: notification alert frigate person
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'person' }}"
      - "{{ not 'front' in trigger.payload_json['after']['camera'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate dog/cat in the front yard
    ##########################################################

- alias: notification alert frigate dog in front yard
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'dog' }}"
      - "{{ 'yard' in trigger.payload_json['after']['entered_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the front yard.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

- alias: notification alert frigate cat in front yard
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'cat' }}"
      - "{{ 'yard' in trigger.payload_json['after']['entered_zones'] }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the front yard.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate dog/cat detected in back yard
    ##########################################################

- alias: notification alert frigate dog
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'dog' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'back' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

- alias: notification alert frigate cat
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'cat' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'back' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A {{trigger.payload_json["after"]["label"]}} was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

    ##########################################################
    ## Frigate coyote detected in back yard
    ##########################################################

- alias: notification alert frigate coyote nature
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'dog' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'nature' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A COYOTE was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

- alias: notification alert frigate coyote nature2
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'dog' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'nature2' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A COYOTE was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

- alias: notification alert frigate coyote nature cat
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'cat' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'nature' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A COYOTE was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single

- alias: notification alert frigate coyote nature2 cat
  description: ""
  trigger:
    - platform: mqtt
      topic: frigate/events
      payload: new
      value_template: "{{ value_json.type }}"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.disable_text_notification
        state: "off"
      - "{{ trigger.payload_json['after']['label'] == 'cat' }}"
      - "{{ trigger.payload_json['after']['camera'] == 'nature2' }}"
  action:
    - service: notify.homeassistant_dis
      data_template:
        message: 'A COYOTE was detected in the {{trigger.payload_json["after"]["camera"]}}.'
        target: ["REDACTED"]
        data:
          embed:
            image:
              url: 'https://ha.REDACTED/api/frigate/notifications/{{trigger.payload_json["after"]["id"]}}/snapshot.jpg?bbox=1&timestamp=0|Image'
  mode: single
